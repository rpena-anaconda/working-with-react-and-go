{"ast":null,"code":"var _jsxFileName = \"/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"http://localhost:4000/v1/kmkmad\").then(response => {\n      if (response.status !== 200) {\n        let err = Error;\n        err.message = \"Invalid response code: \" + response.status;\n      }\n\n      return response.json();\n    }).then(json => {\n      setError(json.error);\n      setMovies(json.movies);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading && !error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!loading && error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Movies, \"tiPf8xgYCgiZcxQneFAtMOZdhPQ=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/Movies.js"],"names":["React","useEffect","useState","Link","Movies","movies","setMovies","loading","setLoading","error","setError","fetch","then","response","status","err","Error","message","json","map","movie","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAG,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAIC,GAAG,GAAGC,KAAV;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAc,4BAA4BJ,QAAQ,CAACC,MAAnD;AACH;;AAED,aAAOD,QAAQ,CAACK,IAAT,EAAP;AACH,KARL,EASKN,IATL,CASWM,IAAD,IAAU;AACZR,MAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAH,MAAAA,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAbL;AAcH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAID,OAAO,IAAI,CAACE,KAAhB,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACF,OAAD,IAAYE,KAAhB,EAAuB;AACnB,wBAAO;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGK,CAACF,OAAD,IAAY,CAACE,KAAb,iBAAsB;AAAA,gBAClBJ,MAAM,CAACc,GAAP,CAAYC,KAAD,iBACR;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,oBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADkB;AAAA;AAAA;AAAA;AAAA,YAH3B;AAAA,kBADJ;AAaH;;GA7CQjB,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        setLoading(true)\n\n        fetch(\"http://localhost:4000/v1/kmkmad\")\n            .then((response) => {\n                if (response.status !== 200) {\n                    let err = Error;\n                    err.message = \"Invalid response code: \" + response.status;\n                }\n\n                return response.json()\n            })\n            .then((json) => {\n                setError(json.error);\n                setMovies(json.movies);\n                setLoading(false)\n            })\n    }, []);\n\n    if (loading && !error) {\n        return <p>Loading Movies...</p>\n    }\n\n    if (!loading && error) {\n        return <p>{error}</p>\n    }\n\n    return (\n        <>\n            <div>Choose a movie</div>\n\n            {!loading && !error && <ul>\n                {movies.map((movie) => (\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                ))}\n            </ul>}\n        </>\n    );\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}