{"ast":null,"code":"var _jsxFileName = \"/Users/rpena/Sites/udemy/working-with-react-and-go/go-movies/src/components/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.title\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Movies, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/rpena/Sites/udemy/working-with-react-and-go/go-movies/src/components/Movies.js"],"names":["React","useState","Movies","movies","setMovies","map","movie","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBACK,KAAKE,MAAL,CAAYE,GAAZ,CAAiBC,KAAD,iBACb;AAAA,kBACKA,KAAK,CAACC;AADX,SAASD,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAaH;;GAhBQN,M;;KAAAA,M;AAkBT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n\n    return (\n        <>\n            <div>Choose a movie</div>\n\n            <ul>\n                {this.movies.map((movie) => (\n                    <li key={movie.id}>\n                        {movie.title}\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}