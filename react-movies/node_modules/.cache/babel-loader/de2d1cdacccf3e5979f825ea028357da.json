{"ast":null,"code":"var _jsxFileName = \"/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/Genre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Genre() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [genre, setGenres] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:4000/v1/genre/${id}`).then(response => {\n      if (response.status !== 200) {\n        setError(true);\n        setErrorMessage(`Invalid response code: ${response.status}`);\n        return;\n      }\n\n      return response.json();\n    }).then(json => {\n      if (json) {\n        setGenres(json.genres);\n        setError(false);\n      }\n\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Genre, \"QupPWA+qj2/TbRswZn/iGeZT8n0=\", false, function () {\n  return [useParams];\n});\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/Genre.js"],"names":["React","useEffect","useState","Link","useParams","Genre","id","genre","setGenres","loading","setLoading","error","setError","errorMessage","setErrorMessage","fetch","then","response","status","json","genres"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAK,IAAAA,KAAK,CAAE,kCAAiCT,EAAG,EAAtC,CAAL,CACKU,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,QAAAA,eAAe,CAAE,0BAAyBG,QAAQ,CAACC,MAAO,EAA3C,CAAf;AACA;AACH;;AAED,aAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,KATL,EAUKH,IAVL,CAUWG,IAAD,IAAU;AACZ,UAAIA,IAAJ,EAAU;AACNX,QAAAA,SAAS,CAACW,IAAI,CAACC,MAAN,CAAT;AACAR,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAhBL;AAiBH,GApBQ,EAoBN,EApBM,CAAT;AAqBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA/BQL,K;UACUD,S;;;KADVC,K;AAiCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nfunction Genre() {\n    const { id } = useParams();\n    const [genre, setGenres] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        setLoading(true)\n\n        fetch(`http://localhost:4000/v1/genre/${id}`)\n            .then((response) => {\n                if (response.status !== 200) {\n                    setError(true);\n                    setErrorMessage(`Invalid response code: ${response.status}`);\n                    return;\n                }\n\n                return response.json()\n            })\n            .then((json) => {\n                if (json) {\n                    setGenres(json.genres);\n                    setError(false);\n                }\n                setLoading(false)\n            })\n    }, [])\n    return (\n        <div></div>\n    );\n}\n\nexport default Genre;\n"]},"metadata":{},"sourceType":"module"}