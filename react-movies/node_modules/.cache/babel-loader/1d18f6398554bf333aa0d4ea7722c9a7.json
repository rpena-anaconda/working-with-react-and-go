{"ast":null,"code":"var _jsxFileName = \"/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/MovieDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Movies from './Movies';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MovieDetails() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:4000/v1/movie/${id}`).then(response => response.json()).then(json => {\n      setMovie(json.movie);\n\n      if (json.movie.genres) {\n        setGenres(Object.values(json.movie.genres));\n      } else {\n        setGenres([]);\n      }\n\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Movie, { ...movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), \">\"]\n  }, void 0, true);\n}\n\n_s(MovieDetails, \"xxUHVBToL7sTmQGG4qIMESE3tKs=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/MovieDetails.js"],"names":["React","useEffect","useState","useParams","Movies","Movie","MovieDetails","id","movie","setMovie","genres","setGenres","loading","setLoading","fetch","then","response","json","Object","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAE,kCAAiCP,EAAG,EAAtC,CAAL,CACKQ,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACZR,MAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;;AAEA,UAAIS,IAAI,CAACT,KAAL,CAAWE,MAAf,EAAuB;AACnBC,QAAAA,SAAS,CAACO,MAAM,CAACC,MAAP,CAAcF,IAAI,CAACT,KAAL,CAAWE,MAAzB,CAAD,CAAT;AACH,OAFD,MAEO;AACHC,QAAAA,SAAS,CAAC,EAAD,CAAT;AACH;;AAEDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAZL;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAID,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,KAAD,OAAWJ;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA,kBADJ;AAKH;;GA/BQF,Y;UACUH,S;;;KADVG,Y;AAiCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Movies from './Movies';\nimport Movie from './Movie';\n\nfunction MovieDetails() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState({});\n    const [genres, setGenres] = useState({});\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(`http://localhost:4000/v1/movie/${id}`)\n            .then((response) => response.json())\n            .then((json) => {\n                setMovie(json.movie)\n\n                if (json.movie.genres) {\n                    setGenres(Object.values(json.movie.genres));\n                } else {\n                    setGenres([]);\n                }\n\n                setLoading(false)\n            })\n    }, [])\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    return (\n        <>\n            <Movie {...movie} />>\n        </>\n    );\n}\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}