{"ast":null,"code":"var _jsxFileName = \"/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/EditMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './EditMovie.css';\nimport Input from './form-components/Input';\nimport Textarea from './form-components/Textarea';\nimport Select from './form-components/Select';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState({\n    id: 0,\n    title: \"\",\n    release_date: \"\",\n    runtime: \"\",\n    mpaa_rating: \"\",\n    rating: \"\",\n    description: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const mpaaRating = [{\n    id: \"G\",\n    value: \"G\"\n  }, {\n    id: \"PG\",\n    value: \"PG\"\n  }, {\n    id: \"PG13\",\n    value: \"PG13\"\n  }, {\n    id: \"R\",\n    value: \"R\"\n  }, {\n    id: \"NC17\",\n    value: \"NC17\"\n  }];\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      fetch(`http://localhost:4000/v1/movie/${id}`).then(response => {\n        if (response.status !== 200) {\n          let err = Error;\n          err.Message = `Invalid response code: ${response.status}`;\n          setError(err);\n        }\n\n        return response.json();\n      }).then(json => {\n        if (json && json.movie !== null) {\n          const releaseDate = new Date(json.movie.release_date);\n          const updatedMovie = { ...json.movie,\n            release_date: releaseDate.toISOString().split(\"T\")[0]\n          };\n          setMovie(updatedMovie);\n        }\n\n        setLoading(false);\n      }).catch(err => {\n        debugger;\n        setError(err);\n        setLoading(false);\n      });\n    }\n  }, [setMovie]);\n\n  const handleChange = () => e => {\n    let value = e.target.value;\n    let name = e.target.name;\n    setMovie({ ...movie,\n      [name]: value\n    });\n    debugger;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('values of new movie', movie);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  } else if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"post\",\n        onSubmit: handleSubmit,\n        children: [movie && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"id\",\n          id: \"id\",\n          value: movie.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Title\",\n          type: \"text\",\n          name: \"title\",\n          value: movie.title,\n          handleChange: handleChange(\"title\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Release Date\",\n          type: \"date\",\n          name: \"release_date\",\n          value: movie.release_date,\n          handleChange: handleChange(\"release_date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Runtime\",\n          type: \"text\",\n          name: \"runtime\",\n          value: movie.runtime,\n          handleChange: handleChange(\"runtime\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          title: 'MPAA Rating',\n          name: 'mpaa_rating',\n          options: mpaaRating,\n          value: movie.mpaa_rating,\n          handleChange: handleChange(\"mpaa_rating\"),\n          placeholder: 'Choose...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Rating\",\n          type: \"text\",\n          name: \"rating\",\n          value: movie.rating,\n          handleChange: handleChange(\"rating\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          title: \"Description\",\n          name: \"description\",\n          value: movie.description,\n          rows: \"3\",\n          handleChange: handleChange(\"description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(movie)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(EditMovie, \"4D/0dj9CBF0hfrrgQ5HNO8c3ZQQ=\", false, function () {\n  return [useParams];\n});\n\n_c = EditMovie;\nexport default EditMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"sources":["/Users/rpena/Sites/udemy/working-with-react-and-go/react-movies/src/components/EditMovie.js"],"names":["React","useState","useRef","useEffect","Input","Textarea","Select","useParams","EditMovie","id","movie","setMovie","title","release_date","runtime","mpaa_rating","rating","description","loading","setLoading","error","setError","mpaaRating","value","fetch","then","response","status","err","Error","Message","json","releaseDate","Date","updatedMovie","toISOString","split","catch","handleChange","e","target","name","handleSubmit","preventDefault","console","log","message","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './EditMovie.css';\nimport Input from './form-components/Input'\nimport Textarea from './form-components/Textarea'\nimport Select from './form-components/Select'\nimport { useParams } from 'react-router-dom';\n\n\nfunction EditMovie() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState({\n        id: 0,\n        title: \"\",\n        release_date: \"\",\n        runtime: \"\",\n        mpaa_rating: \"\",\n        rating: \"\",\n        description: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const mpaaRating = [\n        { id: \"G\", value: \"G\" },\n        { id: \"PG\", value: \"PG\" },\n        { id: \"PG13\", value: \"PG13\" },\n        { id: \"R\", value: \"R\" },\n        { id: \"NC17\", value: \"NC17\" },\n    ];\n\n    useEffect(() => {\n        if (id) {\n            setLoading(true);\n            fetch(`http://localhost:4000/v1/movie/${id}`)\n                .then((response) => {\n                    if (response.status !== 200) {\n                        let err = Error;\n                        err.Message = `Invalid response code: ${response.status}`;\n                        setError(err);\n                    }\n\n                    return response.json();\n                })\n                .then((json) => {\n                    if (json && json.movie !== null) {\n                        const releaseDate = new Date(json.movie.release_date);\n                        const updatedMovie = {\n                            ...json.movie,\n                            release_date: releaseDate.toISOString().split(\"T\")[0]\n                        }\n\n                        setMovie(updatedMovie);\n                    }\n                    setLoading(false);\n                })\n                .catch((err) => {\n\n                    debugger;\n                    setError(err);\n                    setLoading(false);\n                })\n        }\n\n    }, [setMovie]);\n\n    const handleChange = () => (e) => {\n        let value = e.target.value;\n        let name = e.target.name;\n\n        setMovie({\n            ...movie,\n            [name]: value\n        });\n        debugger;\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        console.log('values of new movie', movie)\n    }\n\n    if (error) {\n        return <div>Error: {error.message}</div>\n    } else if (loading) {\n        return <div>Loading...</div>\n    } else {\n        return (\n            <>\n                <h2>Add/Edit Movie</h2>\n                <hr />\n\n                <form method=\"post\" onSubmit={handleSubmit}>\n                    {movie && <input type=\"hidden\" name=\"id\" id=\"id\" value={movie.id} />}\n\n                    <Input\n                        title={\"Title\"}\n                        type={\"text\"}\n                        name={\"title\"}\n                        value={movie.title}\n                        handleChange={handleChange(\"title\")}\n                    />\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='title' className='form-label'>Title</label>\n                        <input type='text' ref={titleInputRef} id='title' name=\"title\" className='form-control' value={movie.title} />\n                    </div> */}\n\n                    <Input\n                        title={\"Release Date\"}\n                        type={\"date\"}\n                        name={\"release_date\"}\n                        value={movie.release_date}\n                        handleChange={handleChange(\"release_date\")}\n                    />\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='release_date' className='form-label'>Release Date</label>\n                        <input type='text' ref={releaseDateInputRef} id='release_date' name=\"release_date\" className='form-control' value={movie.release_date} />\n                    </div> */}\n\n                    <Input\n                        title={\"Runtime\"}\n                        type={\"text\"}\n                        name={\"runtime\"}\n                        value={movie.runtime}\n                        handleChange={handleChange(\"runtime\")}\n                    />\n\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='runtime' className='form-label'>Runtime</label>\n                        <input type='text' ref={runtimeInputRef} id='runtime' name=\"runtime\" className='form-control' value={movie.runtime} />\n                    </div> */}\n\n                    <Select\n                        title={'MPAA Rating'}\n                        name={'mpaa_rating'}\n                        options={mpaaRating}\n                        value={movie.mpaa_rating}\n                        handleChange={handleChange(\"mpaa_rating\")}\n                        placeholder={'Choose...'}\n                    />\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='mpaa_rating' className='form-label'>MPAA Rating</label>\n                        <select className='form-select' ref={mpaaRatingInputRef} value={movie.mpaa_rating}>\n                            <option className='form-select' value='G'>G</option>\n                            <option className='form-select' value='PG'>PG</option>\n                            <option className='form-select' value='PG-13'>PG-13</option>\n                            <option className='form-select' value='R'>R</option>\n                            <option className='form-select' value='NC-17'>NC-17</option>\n                        </select>\n                    </div> */}\n\n                    <Input\n                        title={\"Rating\"}\n                        type={\"text\"}\n                        name={\"rating\"}\n                        value={movie.rating}\n                        handleChange={handleChange(\"rating\")}\n                    />\n\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='rating' className='form-label'>Rating</label>\n                        <input type='text' ref={ratingInputRef} id='rating' name=\"rating\" className='form-control' value={movie.rating} />\n                    </div> */}\n\n                    <Textarea\n                        title={\"Description\"}\n                        name={\"description\"}\n                        value={movie.description}\n                        rows={\"3\"}\n                        handleChange={handleChange(\"description\")}\n                    />\n\n                    {/* <div className=\"mb-3\">\n                        <label htmlFor='description' className='form-label'>Description</label>\n                        <textarea id='description' ref={descriptionInputRef} name='description' rows='3' className='form-control'>{movie.description}</textarea>\n                    </div> */}\n\n                    <hr />\n\n                    <button className='btn btn-primary'>Save</button>\n                </form>\n\n                <div className=\"mt-3\">\n                    <pre>{JSON.stringify(movie)}</pre>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}